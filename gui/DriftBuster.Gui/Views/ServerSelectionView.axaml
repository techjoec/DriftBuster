<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="using:DriftBuster.Gui.ViewModels"
             xmlns:views="using:DriftBuster.Gui.Views"
             xmlns:conv="using:DriftBuster.Gui.Converters"
             xmlns:input="using:Avalonia.Input"
             xmlns:automation="using:Avalonia.Automation"
             x:Class="DriftBuster.Gui.Views.ServerSelectionView"
             x:DataType="vm:ServerSelectionViewModel">
  <ScrollViewer>
    <StackPanel Margin="0,0,0,24" Spacing="18">
      <Grid ColumnDefinitions="Auto,Auto,Auto,*" ColumnSpacing="12" VerticalAlignment="Center">
        <Button Content="Setup"
                Classes="outline"
                Command="{Binding ShowSetupCommand}"
                IsEnabled="{Binding IsViewingCatalog}" />
        <Button Grid.Column="1"
                Content="Results"
                Classes="outline"
                Command="{Binding ShowCatalogCommand}"
                IsEnabled="{Binding CatalogViewModel.HasEntries}" />
        <Button Grid.Column="2"
                Content="Drilldown"
                Classes="outline"
                Command="{Binding ShowDrilldownCommand}" />
        <TextBlock Grid.Column="3"
                   HorizontalAlignment="Right"
                   TextWrapping="Wrap"
                   Classes="subtitle"
                   Text="{Binding StatusBanner}" />
      </Grid>

      <StackPanel Spacing="16"
                  IsVisible="{Binding IsViewingCatalog, Converter={x:Static conv:BooleanNegationConverter.Instance}}">
        <Border Classes="surface" Padding="16" CornerRadius="{DynamicResource Radius.Large}">
          <Grid ColumnDefinitions="*,Auto" ColumnSpacing="12">
            <StackPanel Orientation="Horizontal" Spacing="12" VerticalAlignment="Center">
              <ToggleSwitch Content="Remember session" IsChecked="{Binding PersistSessionState}" />
              <Button Content="Save"
                      Classes="outline"
                      Command="{Binding SaveSessionCommand}"
                      IsEnabled="{Binding PersistSessionState}" />
              <Button Content="Clear"
                      Classes="outline"
                      Command="{Binding ClearHistoryCommand}" />
            </StackPanel>
            <StackPanel Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right">
              <TextBlock Text="{Binding CatalogViewModel.FilteredEntries.Count, StringFormat='Catalog entries: {0}'}"
                         Classes="subtitle" HorizontalAlignment="Right" />
            </StackPanel>
          </Grid>
        </Border>

        <Border Padding="18" CornerRadius="{DynamicResource Radius.Large}" Background="#1E293B" Opacity="0.95">
          <StackPanel Spacing="6">
            <TextBlock Text="Planning guidance" FontSize="16" FontWeight="SemiBold" Foreground="#E2E8F0" />
            <TextBlock TextWrapping="Wrap"
                       Foreground="#E2E8F0"
                       Text="Enable the hosts you want to scan, add absolute root paths, then run all or fill in gaps with the partial rerun buttons. Activity history keeps a concise trail of exports, retries, and errors." />
          </StackPanel>
        </Border>

        <ItemsControl x:Name="ServerCardsVirtualRepeater"
                       ItemsSource="{Binding Servers}"
                       HorizontalAlignment="Stretch"
                       IsVisible="{Binding UseVirtualizedServerList}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <Border Padding="16"
                      Margin="0,0,0,16"
                      HorizontalAlignment="Stretch"
                      Classes="surface"
                      CornerRadius="{DynamicResource Radius.Large}"
                      ToolTip.Tip="{Binding ValidationSummary}"
                      automation:AutomationProperties.Name="{Binding ValidationSummary}"
                      PointerPressed="OnServerCardPointerPressed"
                      input:DragDrop.AllowDrop="True"
                      input:DragDrop.DragOver="OnServerCardDragOver"
                      input:DragDrop.Drop="OnServerCardDrop">
                <StackPanel Spacing="12">
                  <Grid ColumnDefinitions="*,Auto" VerticalAlignment="Center">
                    <ToggleSwitch IsChecked="{Binding IsEnabled}" Content="Enabled" />
                    <StackPanel Grid.Column="1" HorizontalAlignment="Right" Spacing="2">
                      <TextBlock Text="{Binding StatusText}" Classes="subtitle" HorizontalAlignment="Right" />
                      <TextBlock Text="{Binding LastRunAt, StringFormat='Last run: {0:G}'}"
                                 Classes="subtitle"
                                 IsVisible="{Binding LastRunAt}" HorizontalAlignment="Right" />
                    </StackPanel>
                  </Grid>

                  <Grid ColumnDefinitions="Auto,*" ColumnSpacing="8" VerticalAlignment="Center">
                    <TextBlock Text="Label" Classes="subtitle" />
                    <TextBox Grid.Column="1"
                             Text="{Binding Label, Mode=TwoWay}"
                             MinWidth="200"
                             HorizontalAlignment="Stretch" />
                  </Grid>

                  <Grid ColumnDefinitions="Auto,*" ColumnSpacing="8" VerticalAlignment="Center">
                    <TextBlock Text="Scope" Classes="subtitle" />
                    <ComboBox Grid.Column="1"
                              ItemsSource="{Binding DataContext.ScopeOptions, RelativeSource={RelativeSource AncestorType=UserControl}}"
                              SelectedValue="{Binding Scope, Mode=TwoWay}"
                              SelectedValueBinding="{Binding Value}">
                      <ComboBox.ItemTemplate>
                        <DataTemplate>
                          <TextBlock Text="{Binding DisplayName}" />
                        </DataTemplate>
                      </ComboBox.ItemTemplate>
                    </ComboBox>
                  </Grid>

                  <StackPanel Spacing="8">
                    <ItemsControl ItemsSource="{Binding Roots}">
                      <ItemsControl.ItemTemplate>
                        <DataTemplate>
                          <Grid ColumnDefinitions="*,Auto" ColumnSpacing="8" VerticalAlignment="Center">
                            <TextBox Text="{Binding Path, Mode=TwoWay}" HorizontalAlignment="Stretch" />
                            <Button Grid.Column="1"
                                    Width="36"
                                    Content="âœ•"
                                    Classes="outline"
                                    Command="{Binding DataContext.RemoveRootCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    CommandParameter="{Binding}" />
                          </Grid>
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Grid ColumnDefinitions="*,Auto" ColumnSpacing="8">
                      <TextBox Grid.Column="0"
                               Text="{Binding NewRootPath, Mode=TwoWay}"
                               Watermark="Add absolute root"
                               HorizontalAlignment="Stretch" />
                      <Button Grid.Column="1"
                              Content="Add"
                              Classes="outline"
                              Command="{Binding DataContext.AddRootCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                              CommandParameter="{Binding}" />
                    </Grid>
                    <TextBlock Text="{Binding RootInputError}" Classes="subtitle" Foreground="{DynamicResource Brush.Accent}" />
                  </StackPanel>

                  <StackPanel Orientation="Horizontal" Spacing="10" VerticalAlignment="Center">
                    <TextBlock Text="State:" Classes="subtitle" />
                    <TextBlock Text="{Binding RunState}" FontWeight="SemiBold" />
                    <Button Content="Retry"
                            Classes="outline"
                            IsVisible="{Binding CanRetry}"
                            Command="{Binding DataContext.RunMissingCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                            CommandParameter="{Binding HostId}" />
                  </StackPanel>
                </StackPanel>
              </Border>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
        <ItemsControl x:Name="ServerCardsFallback"
                       ItemsSource="{Binding Servers}"
                       HorizontalAlignment="Stretch"
                       IsVisible="{Binding UseVirtualizedServerList, Converter={x:Static conv:BooleanNegationConverter.Instance}}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <WrapPanel ItemWidth="320"
                         MinHeight="240"
                         Margin="0,0,0,16" />
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <Border Padding="16"
                      Margin="0,0,16,16"
                      HorizontalAlignment="Stretch"
                      Classes="surface"
                      CornerRadius="{DynamicResource Radius.Large}"
                      ToolTip.Tip="{Binding ValidationSummary}"
                      automation:AutomationProperties.Name="{Binding ValidationSummary}"
                      PointerPressed="OnServerCardPointerPressed"
                      input:DragDrop.AllowDrop="True"
                      input:DragDrop.DragOver="OnServerCardDragOver"
                      input:DragDrop.Drop="OnServerCardDrop">
                <StackPanel Spacing="12">
                  <Grid ColumnDefinitions="*,Auto" VerticalAlignment="Center">
                    <ToggleSwitch IsChecked="{Binding IsEnabled}" Content="Enabled" />
                    <StackPanel Grid.Column="1" HorizontalAlignment="Right" Spacing="2">
                      <TextBlock Text="{Binding StatusText}" Classes="subtitle" HorizontalAlignment="Right" />
                      <TextBlock Text="{Binding LastRunAt, StringFormat='Last run: {0:G}'}"
                                 Classes="subtitle"
                                 IsVisible="{Binding LastRunAt}" HorizontalAlignment="Right" />
                    </StackPanel>
                  </Grid>

                  <Grid ColumnDefinitions="Auto,*" ColumnSpacing="8" VerticalAlignment="Center">
                    <TextBlock Text="Label" Classes="subtitle" />
                    <TextBox Grid.Column="1"
                             Text="{Binding Label, Mode=TwoWay}"
                             MinWidth="200"
                             HorizontalAlignment="Stretch" />
                  </Grid>

                  <Grid ColumnDefinitions="Auto,*" ColumnSpacing="8" VerticalAlignment="Center">
                    <TextBlock Text="Scope" Classes="subtitle" />
                    <ComboBox Grid.Column="1"
                              ItemsSource="{Binding DataContext.ScopeOptions, RelativeSource={RelativeSource AncestorType=UserControl}}"
                              SelectedValue="{Binding Scope, Mode=TwoWay}"
                              SelectedValueBinding="{Binding Value}">
                      <ComboBox.ItemTemplate>
                        <DataTemplate>
                          <TextBlock Text="{Binding DisplayName}" />
                        </DataTemplate>
                      </ComboBox.ItemTemplate>
                    </ComboBox>
                  </Grid>

                  <StackPanel Spacing="8">
                    <ItemsControl ItemsSource="{Binding Roots}">
                      <ItemsControl.ItemTemplate>
                        <DataTemplate>
                          <Grid ColumnDefinitions="*,Auto" ColumnSpacing="8" VerticalAlignment="Center">
                            <TextBox Text="{Binding Path, Mode=TwoWay}" HorizontalAlignment="Stretch" />
                            <Button Grid.Column="1"
                                    Width="36"
                                    Content="âœ•"
                                    Classes="outline"
                                    Command="{Binding DataContext.RemoveRootCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    CommandParameter="{Binding}" />
                          </Grid>
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Grid ColumnDefinitions="*,Auto" ColumnSpacing="8">
                      <TextBox Grid.Column="0"
                               Text="{Binding NewRootPath, Mode=TwoWay}"
                               Watermark="Add absolute root"
                               HorizontalAlignment="Stretch" />
                      <Button Grid.Column="1"
                              Content="Add"
                              Classes="outline"
                              Command="{Binding DataContext.AddRootCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                              CommandParameter="{Binding}" />
                    </Grid>
                    <TextBlock Text="{Binding RootInputError}" Classes="subtitle" Foreground="{DynamicResource Brush.Accent}" />
                  </StackPanel>

                  <StackPanel Orientation="Horizontal" Spacing="10" VerticalAlignment="Center">
                    <TextBlock Text="State:" Classes="subtitle" />
                    <TextBlock Text="{Binding RunState}" FontWeight="SemiBold" />
                    <Button Content="Retry"
                            Classes="outline"
                            IsVisible="{Binding CanRetry}"
                            Command="{Binding DataContext.RunMissingCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                            CommandParameter="{Binding HostId}" />
                  </StackPanel>
                </StackPanel>
              </Border>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>



        <Grid ColumnDefinitions="2*,3*" ColumnSpacing="16">
          <Border Classes="surface" Padding="18" CornerRadius="{DynamicResource Radius.Large}">
            <StackPanel Spacing="10">
              <TextBlock Text="Execution" FontSize="18" FontWeight="SemiBold" />
              <WrapPanel>
                <Button Content="Run all" Classes="primary" Command="{Binding RunAllCommand}" IsEnabled="{Binding HasActiveServers}" Margin="0,0,10,10" />
                <Button Content="Run missing" Classes="outline" Command="{Binding RunMissingCommand}" Margin="0,0,10,10" />
                <Button Content="Cancel" Classes="outline" Command="{Binding CancelRunsCommand}" IsEnabled="{Binding IsBusy}" Margin="0,0,10,10" />
              </WrapPanel>
              <ItemsControl ItemsSource="{Binding Servers}">
                <ItemsControl.ItemTemplate>
                  <DataTemplate>
                    <Grid ColumnDefinitions="2*,*,*,Auto" ColumnSpacing="12" VerticalAlignment="Center">
                      <TextBlock Text="{Binding Label}" />
                      <TextBlock Text="{Binding RunState}" />
                      <TextBlock Text="{Binding StatusText}" />
                      <Button Grid.Column="3"
                              Content="View drilldown"
                              Classes="outline"
                              Command="{Binding DataContext.ShowDrilldownForHostCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                              CommandParameter="{Binding HostId}"
                              ToolTip.Tip="Open the most recent drilldown for this host."
                              automation:AutomationProperties.Name="{Binding Label, StringFormat='View drilldown for {0}'}" />
                    </Grid>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
            </StackPanel>
          </Border>

          <Border Classes="surface" Padding="18" CornerRadius="{DynamicResource Radius.Large}">
            <StackPanel Spacing="10">
              <Grid ColumnDefinitions="*,Auto" ColumnSpacing="12">
                <TextBlock Text="Activity timeline" FontSize="18" FontWeight="SemiBold" />
                <ComboBox Grid.Column="1"
                          Width="160"
                          ItemsSource="{Binding ActivityFilterOptions}"
                          SelectedItem="{Binding ActivityFilter}" />
              </Grid>
              <TextBlock Text="No activity recorded yet."
                         Classes="subtitle"
                         HorizontalAlignment="Center"
                         IsVisible="{Binding HasActivityEntries, Converter={x:Static conv:BooleanNegationConverter.Instance}}" />
              <ItemsControl x:Name="ActivityVirtualRepeater"
                             ItemsSource="{Binding FilteredActivityEntries}"
                             IsVisible="{Binding UseVirtualizedActivityFeed}">
                <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                  </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                  <DataTemplate>
                    <Border Padding="12" Margin="0,0,0,10" CornerRadius="{DynamicResource Radius.Medium}" Classes="surface">
                      <StackPanel Spacing="4">
                        <Grid ColumnDefinitions="Auto,*" ColumnSpacing="8">
                          <TextBlock Text="{Binding TimestampText}" Classes="subtitle" />
                          <TextBlock Grid.Column="1" Text="{Binding SeverityLabel}" Classes="subtitle" />
                        </Grid>
                        <TextBlock Text="{Binding Summary}" FontWeight="SemiBold" />
                        <TextBlock Text="{Binding Detail}" TextWrapping="Wrap"
                                   IsVisible="{Binding Detail, Converter={x:Static conv:StringNotEmptyConverter.Instance}}" />
                        <Button Content="Copy entry"
                                HorizontalAlignment="Right"
                                Classes="outline"
                                Command="{Binding DataContext.CopyActivityCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                CommandParameter="{Binding}" />
                      </StackPanel>
                    </Border>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
              <ItemsControl x:Name="ActivityFallback"
                            ItemsSource="{Binding FilteredActivityEntries}"
                            IsVisible="{Binding UseVirtualizedActivityFeed, Converter={x:Static conv:BooleanNegationConverter.Instance}}">
                <ItemsControl.ItemTemplate>
                  <DataTemplate>
                    <Border Padding="12" Margin="0,0,0,10" CornerRadius="{DynamicResource Radius.Medium}" Classes="surface">
                      <StackPanel Spacing="4">
                        <Grid ColumnDefinitions="Auto,*" ColumnSpacing="8">
                          <TextBlock Text="{Binding TimestampText}" Classes="subtitle" />
                          <TextBlock Grid.Column="1" Text="{Binding SeverityLabel}" Classes="subtitle" />
                        </Grid>
                        <TextBlock Text="{Binding Summary}" FontWeight="SemiBold" />
                        <TextBlock Text="{Binding Detail}" TextWrapping="Wrap"
                                   IsVisible="{Binding Detail, Converter={x:Static conv:StringNotEmptyConverter.Instance}}" />
                        <Button Content="Copy entry"
                                HorizontalAlignment="Right"
                                Classes="outline"
                                Command="{Binding DataContext.CopyActivityCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                CommandParameter="{Binding}" />
                      </StackPanel>
                    </Border>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
            </StackPanel>
          </Border>
        </Grid>
      </StackPanel>

      <ContentControl Content="{Binding CatalogViewModel}"
                      IsVisible="{Binding IsViewingCatalog}">
        <ContentControl.ContentTemplate>
          <DataTemplate>
            <views:ResultsCatalogView DataContext="{Binding}" />
          </DataTemplate>
        </ContentControl.ContentTemplate>
      </ContentControl>
    </StackPanel>
  </ScrollViewer>
</UserControl>
